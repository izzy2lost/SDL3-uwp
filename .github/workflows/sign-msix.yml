name: MSIX Signing

on:
  push:
    branches:
      - main

jobs:
  sign-msix:
    runs-on: windows-latest
    
    steps:
      # Step 1: Checkout the code repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Install PowerShell module for certificate creation
      - name: Install PowerShell module
        run: Install-Module -Name PSScriptTools -Force -Scope CurrentUser

      # Step 3: Generate self-signed certificate using PowerShell
      - name: Generate self-signed certificate
        run: |
          $cert = New-SelfSignedCertificate -CertStoreLocation Cert:\CurrentUser\My -DnsName "CN=Ravbug" -KeyAlgorithm RSA -KeyLength 2048 -NotAfter (Get-Date).AddYears(1)
          Export-PfxCertificate -Cert $cert -FilePath "$env:GITHUB_WORKSPACE\certificate.pfx" -Password (ConvertTo-SecureString -String "yourpassword" -Force -AsPlainText)
        shell: pwsh

      # Step 4: Set paths for MSIX and certificate
      - name: Set paths for MSIX and certificate
        run: |
          $msixFilePath = "$env:GITHUB_WORKSPACE\sdl-min_1.0.0.0_x64.msix"
          $outputFolder = "$env:GITHUB_WORKSPACE\signed_output"
          $certificatePath = "$env:GITHUB_WORKSPACE\certificate.pfx"
          echo "MSIX file path: $msixFilePath"
          echo "Output folder: $outputFolder"
          echo "Certificate path: $certificatePath"
        shell: pwsh

      # Step 5: Create output folder if not exists
      - name: Create output folder if not exists
        run: |
          if (-not (Test-Path -Path "$env:GITHUB_WORKSPACE\signed_output")) {
            New-Item -ItemType Directory -Path "$env:GITHUB_WORKSPACE\signed_output"
          }
        shell: pwsh

      # Step 6: Sign the MSIX package using the self-signed certificate
      - name: Sign MSIX package
        run: |
          # Full path to MakeAppx on the Visual Studio 2022 runner
          $makeAppxPath = "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\SDK\Microsoft.VisualStudio.Package.Folder\bin\MakeAppx.exe"
          
          # Sign the MSIX package
          Start-Process -FilePath $makeAppxPath -ArgumentList "sign /p $msixFilePath /f $certificatePath /p yourpassword /o $outputFolder" -Wait
        shell: pwsh

      # Step 7: Upload signed MSIX package
      - name: Upload signed MSIX package
        uses: actions/upload-artifact@v4
        with:
          name: signed-msix
          path: ${{ github.workspace }}\signed_output\sdl-min_1.0.0.0_x64.msix
